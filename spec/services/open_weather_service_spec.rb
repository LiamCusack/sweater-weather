require 'rails_helper'

describe OpenWeatherService, :vcr do
  describe "class methods" do
    it 'get_weather' do
      forecast = OpenWeatherService.get_weather(39.738453, -104.984853)

      expect(forecast).to be_a(Hash)
      expect(forecast[:current]).to have_key(:dt)
      expect(forecast[:current]).to have_key(:sunrise)
      expect(forecast[:current]).to have_key(:sunset)
      expect(forecast[:current]).to have_key(:temp)
      expect(forecast[:current]).to have_key(:weather)
      expect(forecast[:current][:dt]).to be_a(Integer)
      expect(forecast[:current][:sunrise]).to be_a(Integer)
      expect(forecast[:current][:sunset]).to be_a(Integer)
      expect(forecast[:current][:temp]).to be_a(Float)
      expect(forecast[:current][:weather]).to be_a(Array)
      expect(forecast[:current][:weather][0]).to be_a(Hash)
      expect(forecast[:current][:weather][0]).to have_key(:description)
      expect(forecast[:current][:weather][0]).to have_key(:icon)
      expect(forecast[:current][:weather][0][:description]).to be_a(String)
      expect(forecast[:current][:weather][0][:icon]).to be_a(String)
      expect(forecast[:daily][0]).to have_key(:dt)
      expect(forecast[:daily][0]).to have_key(:sunrise)
      expect(forecast[:daily][0]).to have_key(:sunset)
      expect(forecast[:daily][0]).to have_key(:temp)
      expect(forecast[:daily][0]).to have_key(:weather)
      expect(forecast[:daily][0][:temp]).to have_key(:min)
      expect(forecast[:daily][0][:temp]).to have_key(:max)
      expect(forecast[:daily][0][:weather][0]).to have_key(:description)
      expect(forecast[:daily][0][:weather][0]).to have_key(:icon)
      expect(forecast[:daily][0][:dt]).to be_a(Integer)
      expect(forecast[:daily][0][:sunrise]).to be_a(Integer)
      expect(forecast[:daily][0][:sunset]).to be_a(Integer)
      expect(forecast[:daily][0][:temp]).to be_a(Hash)
      expect(forecast[:daily][0][:weather]).to be_a(Array)
      expect(forecast[:daily][0][:temp][:min]).to be_a(Float)
      expect(forecast[:daily][0][:temp][:max]).to be_a(Float)
      expect(forecast[:daily][0][:weather][0][:description]).to be_a(String)
      expect(forecast[:daily][0][:weather][0][:icon]).to be_a(String)
      expect(forecast[:hourly][0]).to have_key(:dt)
      expect(forecast[:hourly][0]).to have_key(:temp)
      expect(forecast[:hourly][0]).to have_key(:weather)
      expect(forecast[:hourly][0][:weather][0]).to have_key(:description)
      expect(forecast[:hourly][0][:weather][0]).to have_key(:icon)
      expect(forecast[:hourly][0][:dt]).to be_a(Integer)
      expect(forecast[:hourly][0][:temp]).to be_a(Float)
      expect(forecast[:hourly][0][:weather]).to be_a(Array)
      expect(forecast[:hourly][0][:weather][0][:description]).to be_a(String)
      expect(forecast[:hourly][0][:weather][0][:icon]).to be_a(String)
    end
  end
end
